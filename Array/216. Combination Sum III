public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> result = new LinkedList<>();
        List<Integer> temp = new LinkedList<>();
        helper(result,temp,k,n,1);
        return result;
    }
    public static void helper(List<List<Integer>> result, List<Integer> temp,
                              int k, int n, int start) {
        if (n < 0) return;
        if (n == 0 && k == temp.size()) {
            result.add(new LinkedList<>(temp));
            return;
        }
        for (int i = start; i <= 9 ; i++) {
            temp.add(i);
            helper(result, temp, k, n-i, i+1);
            temp.remove(temp.size()-1);
        }
    }
