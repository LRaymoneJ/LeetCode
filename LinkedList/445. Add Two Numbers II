public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode t1 = l1,t2 = l2;
        int len1 = 0,len2 = 0;
        while (t1 != null) {
            len1 ++;
            t1 = t1.next;
        }
        while (t2 != null) {
            len2 ++;
            t2 = t2.next;
        }
        int[] temp = new int[Math.max(len1,len2)];
        ListNode lo = len1 > len2 ? l1 : l2;
        ListNode sh = len1 > len2 ? l2 : l1;
        int com = Math.abs(len1-len2);
        int i = Math.max(len1,len2)-1;
        while (i > Math.max(len1,len2)-com-1) {
            temp[i] = lo.val;
            lo = lo.next;
            i --;
        }
        while (i >= 0) {
            temp[i] = lo.val + sh.val;
            lo = lo.next;
            sh = sh.next;
            i --;
        }
        ListNode result = null;
        int mod = 0,carry = 0;
        for (int j = 0; j < Math.max(len1,len2); j++) {
            mod = temp[j] % 10;
            carry = temp[j] / 10;
            ListNode temp1 = new ListNode(mod);
            temp1.next = result;
            result = temp1;
            if (j < Math.max(len1,len2)-1) temp[j+1] += carry;
        }
        if (carry != 0) {
            ListNode temp1 = new ListNode(carry);
            temp1.next = result;
            result = temp1;
        }
        return result;
    }
