public ListNode sortList(ListNode head) {
        if (head == null || head.next == null) return head;
        ListNode mid = getMiddleOfList(head);
        ListNode second = mid.next;
        mid.next = null;
        return mergeList(sortList(head),sortList(second));
    }
    public ListNode getMiddleOfList(ListNode head) {
        ListNode slow = head,fast = head;
        while (fast.next != null && fast.next.next != null) {
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
    public ListNode mergeList(ListNode a,ListNode b) {
        ListNode result = new ListNode(0);
        ListNode temp = result;
        while (a != null && b != null) {
            if (a.val < b.val) {
                temp.next = a;
                a = a.next;
            }
            else {
                temp.next = b;
                b = b.next;
            }
            temp = temp.next;
        }
        temp.next = a != null ? a : b;
        return result.next;
    }
