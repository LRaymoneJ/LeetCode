public boolean isPalindrome(ListNode head) {
        if (head == null || head.next == null)
            return true;
        ListNode middle = findMiddle(head);
        middle.next = reverseList(middle.next);
        while (middle.next != null && head.val == middle.next.val){
            head = head.next;
            middle.next = middle.next.next;
        }
        return middle.next == null;
    }
    public ListNode findMiddle(ListNode head){
        ListNode slow = head;
        ListNode fast = head.next;
        while (fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
    public ListNode reverseList(ListNode head){
        ListNode first = null;
        while (head != null){
            ListNode temp = head.next;
            head.next = first;
            first = head;
            head = temp;
        }
        return first;
    }
