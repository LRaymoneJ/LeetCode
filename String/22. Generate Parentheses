public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        String temp = new String();
        if (n <= 0) return result;
        dfs(result,temp,n,n);
        return result;

    }
    public void dfs(List<String> result,String temp,int left,int right) {
        if (left > right)
            return;
        if (left == 0 && right == 0) {
            result.add(new String(temp));
            return;
        }
        if (left > 0)
            dfs(result,temp + '(',left - 1,right);
        if (right > 0)
            dfs(result,temp + ')',left,right - 1);
    }
