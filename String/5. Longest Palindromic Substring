    public String longestPalindrome(String s) {
       if (s == null) return null;
        if (s.length() == 1) return s;
        String result = s.substring(0,1);
        for (int i = 0; i < s.length(); i++) {
            String temp = getPalindrome(s,i,i);   //找到以i为中心的回文
            if (temp.length() > result.length())
                result = temp;
            temp = getPalindrome(s,i,i + 1); //找到以i,i+1为中心的回文
            if (temp.length() > result.length()) 
                result = temp;
        }
        return result;
    }
    public String getPalindrome(String s,int begin,int end) {
        while (begin >= 0 && end < s.length() && s.charAt(begin) == s.charAt(end)) {
            begin --;
            end ++;
        }
        return s.substring(begin + 1,end);
    }
