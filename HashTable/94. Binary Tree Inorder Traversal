方法一：

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new LinkedList<>();
        if (root != null)
            helper(root,result);
        return result;
    }
    public void helper(TreeNode root,List<Integer> result) {
        if (root.left != null)
            helper(root.left,result);
        result.add(root.val);
        if (root.right != null)
            helper(root.right,result);
    }
    
方法二：

    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> result = new LinkedList<>();
        if (root == null)
            return result;
        Stack<TreeNode> stack = new Stack<>();
        TreeNode p = root;
        while (!stack.empty() || p != null) {
            if (p != null) {
                stack.push(p);
                p = p.left;
            }
            else {
                TreeNode t = stack.pop();
                result.add(t.val);
                p = t.right;
            }
        }
        return result;
    }
