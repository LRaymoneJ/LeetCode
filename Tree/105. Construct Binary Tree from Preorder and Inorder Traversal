public TreeNode buildTree(int[] preorder, int[] inorder) {
        int length = preorder.length;
        return helper(preorder,0,length-1,inorder,0,length-1);
    }
    public TreeNode helper(int[] preorder,int pstart,int pend,
                                  int[] inorder,int istart,int iend) {
        if (pstart > pend || istart > iend) return null;
        int rootval = preorder[pstart];
        int temp = 0;
        for (int i = istart; i <= iend; i++) {
            if (inorder[i] == rootval) {
                temp = i;
                break;
            }
        }
        int len = temp - istart;
        TreeNode root = new TreeNode(rootval);
        root.left = helper(preorder,pstart+1,pstart+len,inorder,istart,temp-1);
        root.right = helper(preorder, pstart+len+1, pend, inorder, temp+1, iend);
        return root;
    }
