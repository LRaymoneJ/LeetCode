public List<List<Integer>> result = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root,int sum) {
        if (root == null) return result;
        List<Integer> list = new ArrayList<>();
        dfs(root,sum,list);
        return result;
    }
    public void dfs(TreeNode root,int sum,List<Integer> list) {
        if (root.left == null && root.right == null) {
            if (root.val == sum) {
                list.add(root.val);
                result.add(new ArrayList<>(list));
                list.remove(list.size()-1);
                return;
            }
            else return;
        }
        if (root.left != null) {
            list.add(root.val);
            dfs(root.left, sum-root.val, list);
            list.remove(list.size()-1);
        }
        if (root.right != null) {
            list.add(root.val);
            dfs(root.right, sum-root.val, list);
            list.remove(list.size()-1);
        }
    }
