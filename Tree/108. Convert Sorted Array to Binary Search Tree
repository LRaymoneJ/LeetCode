public TreeNode sortedArrayToBST(int[] nums) {
        if (nums == null || nums.length == 0) return null;
        TreeNode result = helper(nums,0,nums.length-1);
        return result;
    }
    public TreeNode helper(int[] nums,int start,int end) {
        if (start == end) return new TreeNode(nums[start]);
        int mid = (start+end) / 2;
        TreeNode root = new TreeNode(nums[mid]);
        if (mid-1 >= start) root.left = helper(nums, start, mid-1);
        if (mid+1 <= end) root.right = helper(nums, mid+1, end);
        return root;
    }
